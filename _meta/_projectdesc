name = 'ginger'
version = '1.0'
authors = ["Josef Hahn"]
summary = 'a web based rss news reader'
email   = "ginger2015@ginger.ws"
license = licensing.GPLv3
keywords = "python django rss news reader scripting"
maturity = projectdata.Maturity.ProductionStable

basecolor = (0.5, 0.4, 0.1)

longdescription= '''
Ginger is a news reader for rss news feeds. Once it is hosted in
a web server, a user can login and read her news in the web browser.

Features:

- multi-user web application
- multiple news feeds per user
- message tagging
- powerful message filtering
- very customizable
- scripting interface

It is based on Django and Python and is real-world tested to run in Apache with the wsgi module on Debian Linux.
'''

versioncontrol.svn.is_svn_controlled()

documentation.has_doxygen_developerdocumentation()

makehomepage = homepage.tasks.makehomepage
releasing.releasetasks.add(sshfiletransfer.tasks.upload, source=TaskExecution(makehomepage))

#datainjections.pool.add(datainjections.tasks.inject_python, outfile="ginger/main/projectinformations.py",
#                   do_in_source=True)

distributables.pool.addgroup(packages.tasks.tarpackage, name="source tarball", linkto="../ginger.tgz")

distributables.pool.addgroup(packages.debian.tasks.debpackage, name="Debian/Ubuntu package",
                   dependencies = [dependencies.Dependency(dependencies.Type.Required, debian=["apache2"]),
                                   dependencies.Dependency(dependencies.Type.Required, debian=["libapache2-mod-wsgi"]),
                                   dependencies.Dependency(dependencies.Type.Required, debian=["python-feedparser"])],
                   postinst = utils.basic.readfromfile(projectdir+"/_meta/misc/debian/postinst"),
                   prerm = utils.basic.readfromfile(projectdir+"/_meta/misc/debian/prerm"),
                   menuentries = [packages.debian.MenuEntry(name="ginger",
                                                            title="ginger web rss reader",
                                                            category=packages.debian.Category.ApplicationsNetworkWebnews,
                                                            command="xdg-open http://localhost:8013",
                                                            gui=True,
                                                            icon="_meta/icon.png"),],
                   source={"/usr/lib/ginger": TaskExecution(packages.debian.tasks.only_programfiles),
                          "/usr/lib/ginger/init.py": "_meta/misc/init.py",
                          "/usr/lib/ginger/ginger.wsgi": "_meta/misc/ginger.wsgi",
                          "/etc/apache2/sites-available/ginger.conf": "_meta/misc/apache2.conf",
                   })

distributables.pool.addgroup(packages.win32.tasks.win32exepackage, name="Windows package",
                             menuentries = [packages.win32.MenuEntry(title="start server", command="$$/startserver.cmd", icon="_meta/ginger.ico"),
                                packages.win32.MenuEntry(title="open in browser", command="http://localhost:8000", icon="_meta/ginger.ico"),
                             ],
                             oninitscript="""
                                !insertmacro RequirePython "3"
                                Var /Global RV
                                StrCpy $RV "1"
                                ExecWait '$PYPATH\\Scripts\\pip -V' $RV
                                ${If} $RV != '0'
                                MessageBox MB_OK "Your 'Python' is missing 'pip'. Please install the latest Python3 version as x86 variant (incl. 'pip' feature)."
                                Quit
                                ${EndIf}
                                """,
                            oninstallscript="""
                                StrCpy $RV 1
                                ExecWait '$PYPATH\\Scripts\\pip install django' $RV
                                ${If} $RV != '0'
                                MessageBox MB_OK "I was unable to install 'django'. Please retry it manually."
                                ${EndIf}        
                                StrCpy $RV 1
                                ExecWait '$PYPATH\\Scripts\\pip install feedparser' $RV
                                ${If} $RV != '0'
                                MessageBox MB_OK "I was unable to install 'feedparser'. Please retry it manually."
                                ${EndIf}        
                                StrCpy $RV 1
                                ExecWait '$PYPATH\\python "$INSTDIR\\_meta\\misc\\init.py" "C:\ProgramData\ginger" "$INSTDIR"' $RV
                                ${If} $RV != '0'
                                MessageBox MB_OK "I was unable to initialize the database."
                                ${EndIf}            
                                FileOpen $4 "$INSTDIR\startserver.cmd" w
                                FileWrite $4 '"$PYPATH\\python" "$INSTDIR\\manage.py" runserver'
                                FileClose $4
                            """,)

imagegalleries.pool.add("Screenshots", "_meta/screenshots")

dependencies.pool.add(dependencies.python.PythonDependency(dependencies.Type.Required, "2.7"))

dependencies.pool.add(dependencies.python.DjangoDependency(dependencies.Type.Required, "1.6",
    python2=True))

dependencies.pool.add(dependencies.Dependency(dependencies.Type.Required, "python-feedparser",
    "", "package"))

dependencies.pool.add(dependencies.Dependency(dependencies.Type.Recommended_HasAlternatives,
    "Typical Linux Desktop", "", "linux"))

dependencies.pool.add(dependencies.Dependency(dependencies.Type.Recommended_HasAlternatives,
    "apache 2.2", "as web server", "apache"))

dependencies.pool.add(dependencies.Dependency(dependencies.Type.Recommended_HasAlternatives,
    "mod_wsgi", "apache module", "package"))

dependencies.pool.add(dependencies.Dependency(dependencies.Type.Included, "jquery",
    "licensed under terms of [GPLv2](http://www.gnu.org/licenses/gpl-2.0.txt).", "jquery"))

dependencies.pool.add(dependencies.Dependency(dependencies.Type.Included, "font 'Source Sans Pro'",
    "license [OFL](http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=OFL); copied from [here](http://www.google.com/fonts/specimen/Source+Sans+Pro).",
    "artwork"))

dependencies.pool.add(dependencies.Dependency(dependencies.Type.Included, "banner image",
    "_meta/homepage_bannerimage.png; license [public domain](http://creativecommons.org/publicdomain/zero/1.0); copied from [here](http://en.wikipedia.org/wiki/File:Ginger_in_China_01.jpg).",
    "artwork"))
